{"version":3,"sources":["components/layout/MainNavigation.module.css","components/UI/LoadingSpinner.js","components/quotes/QuoteList.module.css","hooks/use-http.js","lib/api.js","components/quotes/NoQuotesFound.js","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/AllQuotes.js","components/layout/MainNavigation.js","components/layout/Layout.js","App.js","index.js"],"names":["module","exports","LoadingSpinner","className","classes","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","undefined","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","NoQuotesFound","noquotes","to","QuoteItem","props","item","text","author","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","pathname","list","map","quote","AllQuotes","fetchQuotes","useEffect","length","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","children","NewQuote","React","lazy","QuoteDetail","NotFound","App","fallback","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f484849.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2_7BK\",\"logo\":\"MainNavigation_logo__G_XMQ\",\"nav\":\"MainNavigation_nav__ot46a\",\"active\":\"MainNavigation_active__1MgHP\"};","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__1JE8L\",\"sorting\":\"QuoteList_sorting__3Gf0p\"};","import {useReducer, useCallback} from 'react';\n\nfunction httpReducer(state, action) {\n    if (action.type === 'SEND') {\n        return {\n            data: null,\n            error: null,\n            status: 'pending',\n        };\n    }\n\n    if (action.type === 'SUCCESS') {\n        return {\n            data: action.responseData,\n            error: null,\n            status: 'completed',\n        };\n    }\n\n    if (action.type === 'ERROR') {\n        return {\n            data: null,\n            error: action.errorMessage,\n            status: 'completed',\n        };\n    }\n\n    return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n    const [httpState, dispatch] = useReducer(httpReducer, {\n        status: startWithPending ? 'pending' : null,\n        data: null,\n        error: null,\n    }, undefined);\n\n    const sendRequest = useCallback(\n        async function (requestData) {\n            dispatch({type: 'SEND'});\n            try {\n                const responseData = await requestFunction(requestData);\n                dispatch({type: 'SUCCESS', responseData});\n            } catch (error) {\n                dispatch({\n                    type: 'ERROR',\n                    errorMessage: error.message || 'Something went wrong!',\n                });\n            }\n        },\n        [requestFunction]\n    );\n\n    return {\n        sendRequest,\n        ...httpState,\n    };\n}\n\nexport default useHttp;","const FIREBASE_DOMAIN = 'https://react-http-d4388-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n    const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n    const data = await response.json();\n\n    if (!response.ok) {\n        throw new Error(data.message || 'Could not fetch quotes.');\n    }\n\n    const transformedQuotes = [];\n\n    for (const key in data) {\n        const quoteObj = {\n            id: key,\n            ...data[key],\n        };\n\n        transformedQuotes.push(quoteObj);\n    }\n\n    return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n    const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n    const data = await response.json();\n\n    if (!response.ok) {\n        throw new Error(data.message || 'Could not fetch quote.');\n    }\n\n    return {\n        id: quoteId,\n        ...data,\n    };\n}\n\nexport async function addQuote(quoteData) {\n    const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n        method: 'POST',\n        body: JSON.stringify(quoteData),\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    });\n\n    const data = await response.json();\n\n    if (!response.ok) {\n        throw new Error(data.message || 'Could not create quote.');\n    }\n\n    return null;\n}\n\nexport async function addComment(requestData) {\n    const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n        method: 'POST',\n        body: JSON.stringify(requestData.commentData),\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    });\n\n    const data = await response.json();\n\n    if (!response.ok) {\n        throw new Error(data.message || 'Could not add comment.');\n    }\n\n    return {commentId: data.name};\n}\n\nexport async function getAllComments(quoteId) {\n    const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n    const data = await response.json();\n\n    if (!response.ok) {\n        throw new Error(data.message || 'Could not get comments.');\n    }\n\n    const transformedComments = [];\n\n    for (const key in data) {\n        const commentObj = {\n            id: key,\n            ...data[key],\n        };\n\n        transformedComments.push(commentObj);\n    }\n\n    return transformedComments;\n}","import classes from './NoQuotesFound.module.css';\nimport {Link} from \"react-router-dom\";\n\nconst NoQuotesFound = () => {\n\n    return (\n        <div className={classes.noquotes}>\n            <p>No quotes found!</p>\n            <Link className='btn' to='/new-quote'>\n                Add a Quote\n            </Link>\n        </div>\n    );\n};\n\nexport default NoQuotesFound;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__1VxRF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__1aq4V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__YALTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__2sip8\"};","import classes from './QuoteItem.module.css';\nimport {Link} from \"react-router-dom\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;","import {Fragment} from 'react';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nimport {useHistory, useLocation} from \"react-router-dom\";\n\nconst sortQuotes = (quotes, ascending) => {\n    return quotes.sort((quoteA, quoteB) => {\n        if (ascending) {\n            return quoteA.id > quoteB.id ? 1 : -1;\n        } else {\n            return quoteA.id < quoteB.id ? 1 : -1;\n        }\n    });\n};\n\nconst QuoteList = (props) => {\n\n    const history = useHistory();\n    const location = useLocation();\n\n    const queryParams = new URLSearchParams(location.search);\n\n    const isAscending = queryParams.get('sort') === 'asc';\n    const sortedQuotes = sortQuotes(props.quotes, isAscending);\n\n    const changeSortOrder = () => {\n        // history.push(`${location.pathname}?sort=${(isAscending ? 'desc' : 'asc')}`);\n        history.push({\n            pathname: location.pathname,\n            search: `?sort=${(isAscending ? 'desc' : 'asc')}`\n        });\n    }\n\n    return (\n        <Fragment>\n            <div className={classes.sorting}>\n                <button onClick={changeSortOrder}>Sort {isAscending ? 'Descending' : 'Ascending'}</button>\n            </div>\n            <ul className={classes.list}>\n                {sortedQuotes.map((quote) => (\n                    <QuoteItem\n                        key={quote.id}\n                        id={quote.id}\n                        author={quote.author}\n                        text={quote.text}\n                    />\n                ))}\n            </ul>\n        </Fragment>\n    );\n};\n\nexport default QuoteList;","import QuoteList from \"../components/quotes/QuoteList\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport {getAllQuotes} from \"../lib/api\";\r\nimport {useEffect} from \"react\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\n\r\nconst AllQuotes = () => {\r\n\r\n    const {sendRequest: fetchQuotes, status, data: quotes, error} = useHttp(getAllQuotes, true);\r\n\r\n    useEffect(() => {\r\n        fetchQuotes();\r\n    }, [fetchQuotes])\r\n\r\n    if (status === 'pending') {\r\n        return (\r\n            <div className='centered'>\r\n                <LoadingSpinner/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <p className='centered focused'>\r\n                {error}\r\n            </p>\r\n        )\r\n    }\r\n\r\n    if (status === 'completed' && (!quotes || quotes.length === 0)) {\r\n        return (\r\n            <NoQuotesFound/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <QuoteList quotes={quotes}/>\r\n    )\r\n}\r\n\r\nexport default AllQuotes;","import classes from './MainNavigation.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst MainNavigation = () => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={classes.logo}>Great Quotes</div>\r\n            <nav className={classes.nav}>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink to='/quotes' activeClassName={classes.active}>All Quotes</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/new-quote' activeClassName={classes.active}>Add a Quote</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default MainNavigation;","import classes from \"./Layout.module.css\";\r\nimport {Fragment} from \"react\";\r\nimport MainNavigation from \"./MainNavigation\";\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <MainNavigation/>\r\n            <main className={classes.main}>\r\n                {props.children}\r\n            </main>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Layout;","import React, {Suspense} from \"react\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport Layout from \"./components/layout/Layout\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\n\nconst NewQuote = React.lazy(() => import('./pages/NewQuote'));\nconst QuoteDetail = React.lazy(() => import('./pages/QuoteDetail'));\nconst NotFound = React.lazy(() => import('./pages/NotFound'));\n\nfunction App() {\n\n    return (\n        <Layout>\n            <Suspense fallback={<div className='centered'>\n                <LoadingSpinner />\n            </div>}>\n            <Switch>\n                <Route path='/' exact>\n                    <Redirect to='/quotes'/>\n                </Route>\n                <Route path='/quotes' exact>\n                    <AllQuotes/>\n                </Route>\n                <Route path='/quotes/:quoteId'>\n                    <QuoteDetail/>\n                </Route>\n                <Route path='/new-quote'>\n                    <NewQuote/>\n                </Route>\n                <Route path='*'>\n                    <NotFound/>\n                </Route>\n            </Switch>\n            </Suspense>\n        </Layout>\n    );\n}\n\nexport default App;","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(<BrowserRouter><App/></BrowserRouter>, document.getElementById('root'));"],"sourceRoot":""}
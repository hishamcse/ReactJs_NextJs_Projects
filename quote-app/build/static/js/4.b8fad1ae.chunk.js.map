{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","message","location","form","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quote"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,kFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,gCC0D/BC,EAtDG,SAACL,GAEf,MAAoCM,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAiBC,mBACjBC,EAAeD,mBAqBrB,OACI,eAAC,WAAD,WACI,cAAC,IAAD,CAAQE,KAAML,EAAYM,QAAS,SAAAC,GAAQ,MAAI,mDAC/C,cAAC,EAAD,UACI,uBAAMb,UAAWC,IAAQa,KAAMC,QAZtB,WACjBR,GAAc,IAWgDS,SAvBlE,SAA2BC,GACvBA,EAAMC,iBAEN,IAAMC,EAAgBX,EAAeY,QAAQC,MACvCC,EAAcZ,EAAaU,QAAQC,MAIzCtB,EAAMwB,WAAW,CAACC,OAAQL,EAAeM,KAAMH,KAevC,UACKvB,EAAM2B,WACH,qBAAK1B,UAAWC,IAAQ0B,QAAxB,SACI,cAACC,EAAA,EAAD,MAIR,sBAAK5B,UAAWC,IAAQ4B,QAAxB,UACI,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKzB,OAExC,sBAAKR,UAAWC,IAAQ4B,QAAxB,UACI,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKvB,OAGtC,qBAAKV,UAAWC,IAAQkC,QAAxB,SACI,wBAAQnC,UAAU,MAAMoC,QAzBjB,WACvB7B,GAAc,IAwBE,kC,gBC3BT8B,UApBE,WAEb,MAA8BC,YAAQC,KAA/BC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,OACdC,EAAUC,cAEhBC,qBAAU,WACS,cAAXH,GACAC,EAAQG,KAAK,aAElB,CAACJ,EAAQC,IAMZ,OACI,cAAC,EAAD,CAAWhB,UAAsB,YAAXe,EAAsBlB,WALxB,SAAAuB,GACpBN,EAAYM","file":"static/js/4.b8fad1ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__GQVkt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3C4Bt\",\"loading\":\"QuoteForm_loading__2GtG-\",\"control\":\"QuoteForm_control__C9EKW\",\"actions\":\"QuoteForm_actions__gT1of\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import {Fragment, useRef, useState} from 'react';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\nimport {Prompt} from \"react-router-dom\";\n\nconst QuoteForm = (props) => {\n\n    const [isEntering, setIsEntering] = useState(false);\n    const authorInputRef = useRef();\n    const textInputRef = useRef();\n\n    function submitFormHandler(event) {\n        event.preventDefault();\n\n        const enteredAuthor = authorInputRef.current.value;\n        const enteredText = textInputRef.current.value;\n\n        // optional: Could validate here\n\n        props.onAddQuote({author: enteredAuthor, text: enteredText});\n    }\n\n    const focusHandler = () => {\n        setIsEntering(true);\n    }\n\n    const finishFocusHandler = () => {\n        setIsEntering(false);\n    }\n\n    return (\n        <Fragment>\n            <Prompt when={isEntering} message={location => 'Are you sure to exit? All inputs will be lost'}/>\n            <Card>\n                <form className={classes.form} onFocus={focusHandler} onSubmit={submitFormHandler}>\n                    {props.isLoading && (\n                        <div className={classes.loading}>\n                            <LoadingSpinner/>\n                        </div>\n                    )}\n\n                    <div className={classes.control}>\n                        <label htmlFor='author'>Author</label>\n                        <input type='text' id='author' ref={authorInputRef}/>\n                    </div>\n                    <div className={classes.control}>\n                        <label htmlFor='text'>Text</label>\n                        <textarea id='text' rows='5' ref={textInputRef}></textarea>\n                    </div>\n\n                    <div className={classes.actions}>\n                        <button className='btn' onClick={finishFocusHandler}>Add Quote</button>\n                    </div>\n                </form>\n            </Card>\n        </Fragment>\n    );\n};\n\nexport default QuoteForm;\n","import QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport {addQuote} from \"../lib/api\";\r\nimport {useEffect} from \"react\";\r\n\r\nconst NewQuote = () => {\r\n\r\n    const {sendRequest, status} = useHttp(addQuote);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (status === 'completed') {\r\n            history.push('/quotes');\r\n        }\r\n    }, [status, history])\r\n\r\n    const addQuoteHandler = quote => {\r\n        sendRequest(quote);\r\n    }\r\n\r\n    return (\r\n        <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler}/>\r\n    )\r\n}\r\n\r\nexport default NewQuote;"],"sourceRoot":""}